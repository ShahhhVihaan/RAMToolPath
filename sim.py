from path import Planner
import tkinter as tk
import time

class App(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.pack()
        self.create_widgets()

        # Initialize a Planner object with a G-code file path
        self.planner = Planner('sample_gcode/setup.gcode')

        # Initialize the starting coordinates
        self.start_x, self.start_y, self.start_z = 0, 0, 0
        self.scale_factor = 7  # Scale up by a factor of 100
        
        self.layer = 0
        self.wait_var = tk.StringVar()



    def create_widgets(self):
        # Create a canvas to display the trace line
        self.canvas = tk.Canvas(self, width=800, height=800)
        self.canvas.pack()
        
        # Create a label to display the current layer
        self.layer_label = tk.Label(self, text="Layer: 0")
        self.layer_label.pack()
        
        # Create a button to start displaying the trace line
        self.start_button = tk.Button(self, text="Start", command=self.start_trace)
        self.start_button.pack(side="left")
        
        # Create a button to move to the next layer
        self.next_layer_button = tk.Button(self, text="Next Layer", command=self.next_layer)
        self.next_layer_button.pack(side="left")


    def start_trace(self):
        # Loop through the coordinates generated by the generate() method
        for coord in self.planner.generate():
            # Get the x and y coordinates
            x, y, z, w = coord

            # Scale up the coordinates by the scaling factor
            x *= self.scale_factor
            y *= self.scale_factor
            z *= self.scale_factor

            # Draw a line from the previous coordinates to the new coordinates
            
            if z!=self.start_z:
                # Wait for next layer button to be pressed
                self.wait_var.set("")  # set the variable to an empty string
                self.next_layer_button.config(state="normal")  # enable the button
                self.master.wait_variable(self.wait_var)  # wait for the variable to be set to a non-empty string
                self.canvas.delete("all")
                
            # Update the starting coordinates
            if w!="G0": self.canvas.create_line(self.start_x, self.start_y, x, y)
            self.start_x, self.start_y, self.start_z = x, y, z

            # Update the canvas to show the new trace line
            self.canvas.update()
        
        # Remove the next layer button after all commands have been executed
        self.next_layer_button.destroy()
        
        
    def next_layer(self):
        self.layer += 1
        self.layer_label.config(text="Layer: {}".format(self.layer))
        self.wait_var.set("continue")


# Create the main window
root = tk.Tk()
root.geometry("1000x1000")
# Create the app
app = App(master=root)

# Start the app
app.mainloop()
